import java.util.*;
class MergeSort {
    public static int[] generateRandomArray(int size,int min,int max,Random random){
        int arr[]=new int[size];
        for(int i=0;i<size;i++){
            arr[i]=random.nextInt(max)+min;
        }
        return arr;
    }
    public static void mergeSort(int arr[],int low,int high){
        if(low<high){
            int mid=(low+high)/2;
            mergeSort(arr,low,mid);
            mergeSort(arr,mid+1,high);
            merge(arr,low,mid,high);
        }
    }
    public static void merge(int arr[],int low,int mid,int high){
        int n1=mid-low+1;
        int n2=high-mid;
        int L[]=new int[n1];
        int R[]=new int[n2];
        for(int i=0;i<n1;i++){
            L[i]=arr[low+i];
        }
        for(int j=0;j<n2;j++){
            R[j]=arr[mid+1+j];
        }
        
        int i=0,j=0,k=low;
        
        while(i<n1&&j<n2){
            if(L[i]<=R[j]){
                arr[k]=L[i];
                i++;
            }else{
                arr[k]=R[j];
                j++;
            }
            k++;
        }
        while(i<n1){
            arr[k]=L[i];
            i++;
            k++;
        }
        while(j<n2){
            arr[k]=R[j];
            j++;
            k++;
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        Random random=new Random();
        System.out.println("Enter the size of the array: ");
        int size=sc.nextInt();
        int arr[]=generateRandomArray(size,1,100,random);
        System.out.println("Generated Array: "+Arrays.toString(arr));
        long startTime=System.nanoTime();
        mergeSort(arr,0,arr.length-1);
        long endTime=System.nanoTime();
        System.out.println("Sorted Array: "+Arrays.toString(arr));
        double duration=endTime-startTime;
        System.out.println("Execution Time: "+duration+" nanoseconds");
    }
}
